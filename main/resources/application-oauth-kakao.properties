# .properties에서는 data source를 넣는 등 여러 설정을 함.
# kakao에 대한 정보는 여기에 넣어 관리하겠다.

# Rest API KEY
spring.security.oauth2.client.registration.kakao.client-id=0f72c2adfb89460c6070e86d0784ec55
# 내 애플리케이션 > 보안 > client secret
spring.security.oauth2.client.registration.kakao.client-secret=kr3qNPpeLNr8DhNPxv8waKwKu6CoV63b

# redirect-url: 사용자가 카카오로 로그인 후 돌아올 server의 url
spring.security.oauth2.client.registration.kakao.redirect-uri="http://localhost:5000/login/oauth2/code/kakao"
# authorization-grant-type: access 토큰 요청 시, 유형을 지정하는 헤더 속성
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
# scope: 사용자 정보 요청 범위를 지정하는 속성: 문서 > 카카오 로그인 > 활용하기
spring.security.oauth2.client.registration.kakao.scope=profile_nickname, profile_image, account_email
# client-name: 클라이언트를 구분하기 위한 이름 eg. Google, Naver
spring.security.oauth2.client.registration.kakao.client-name=Kakao
# client-authentication-method: 인증 서버로 요청 시, 지정할 요청 메소드
spring.security.oauth2.client.registration.kakao.client-authentication-method=POST

# authorization-url: 인가 코드 요청 URI (인증 서버)
spring.security.oauth2.client.provider.kakao.authorization-uri="https://kauth.kakao.com/oauth/authorize"
# token-uri: access 토큰 요청 URI (인증 서버)
spring.security.oauth2.client.provider.kakao.token-uri="https://kauth.kakao.com/oauth/token"
# user-info-url: 사용자 정보 요청 URI (리소스 서버)
spring.security.oauth2.client.provider.kakao.user-info-uri="https://kapi.kakao.com/v2/user/me"
spring.security.oauth2.client.provider.kakao.user-name-attribute=id